# The parent line must be the first non-comment line in the file
# This line defines the product name and version
parent artdaq_core  v3_00_08
defaultqual	e14:s48

# These optional lines define the installed directories where
# headers, libraries, and executables will be found
# Use them only if your product does not conform to the defaults
# Format: directory_type directory_path directory_name
# The only recognized values of the first field are incdir, libdir, and bindir
# The only recognized values of the second field are product_dir and fq_dir
# The third field is not constrained
# The examples here reflect the defaults
incdir      product_dir include
libdir      fq_dir      lib
bindir      fq_dir      bin
fcldir      -
perllib  product_dir

#
product		version		optional
canvas_root_io  v1_00_04        s61
canvas_root_io  v1_00_04        s60
canvas_root_io  v1_00_02        s58
canvas_root_io  v1_00_01        s57
canvas          v3_00_03        s56
canvas          v3_00_02        s54
canvas          v3_00_01        s53
canvas          v2_00_02        s50
canvas          v2_00_01        s49
canvas          v1_06_04        s48
canvas          v1_06_03        s47
canvas          v1_06_02        s46
TRACE           v3_13_01
cetbuildtools	v6_01_00	-	only_for_build
end_product_list

# -nq- means there is no qualifier
# a "-" means the dependent product is not required by the parent and will not be setup
qualifier		canvas		canvas_root_io	TRACE	notes
e15:s61:debug		-		e15:debug	-nq-	-std=c++14
e15:s61:prof		-		e15:prof	-nq-	-std=c++14
nu:e15:s61:debug	-		nu:e15:debug	-nq-	-std=c++14
nu:e15:s61:prof		-		nu:e15:prof	-nq-	-std=c++14
e14:s61:debug		-		e14:debug	-nq-	-std=c++14
e14:s61:prof		-		e14:prof	-nq-	-std=c++14
nu:e14:s61:debug	-		nu:e14:debug	-nq-	-std=c++14
nu:e14:s61:prof		-		nu:e14:prof	-nq-	-std=c++14
e15:s60:debug		-		e15:debug	-nq-	-std=c++14
e15:s60:prof		-		e15:prof	-nq-	-std=c++14
nu:e15:s60:debug	-		nu:e15:debug	-nq-	-std=c++14
nu:e15:s60:prof		-		nu:e15:prof	-nq-	-std=c++14
e14:s60:debug		-		e14:debug	-nq-	-std=c++14
e14:s60:prof		-		e14:prof	-nq-	-std=c++14
nu:e14:s60:debug	-		nu:e14:debug	-nq-	-std=c++14
nu:e14:s60:prof		-		nu:e14:prof	-nq-	-std=c++14
e15:s58:debug		-		e15:debug	-nq-	-std=c++14
e15:s58:prof		-		e15:prof	-nq-	-std=c++14
nu:e15:s58:debug	-		nu:e15:debug	-nq-	-std=c++14
nu:e15:s58:prof		-		nu:e15:prof	-nq-	-std=c++14
e14:s58:debug		-		e14:debug	-nq-	-std=c++14
e14:s58:prof		-		e14:prof	-nq-	-std=c++14
nu:e14:s58:debug	-		nu:e14:debug	-nq-	-std=c++14
nu:e14:s58:prof		-		nu:e14:prof	-nq-	-std=c++14
e15:s57:debug		-		e15:debug	-nq-	-std=c++14
e15:s57:prof		-		e15:prof	-nq-	-std=c++14
nu:e15:s57:debug	-		nu:e15:debug	-nq-	-std=c++14
nu:e15:s57:prof		-		nu:e15:prof	-nq-	-std=c++14
e14:s57:debug		-		e14:debug	-nq-	-std=c++14
e14:s57:prof		-		e14:prof	-nq-	-std=c++14
nu:e14:s57:debug	-		nu:e14:debug	-nq-	-std=c++14
nu:e14:s57:prof		-		nu:e14:prof	-nq-	-std=c++14
e14:s56:debug		e14:debug	-		-nq-	-std=c++14
e14:s56:prof		e14:prof	-               -nq-	-std=c++14
nu:e14:s56:debug	nu:e14:debug	-               -nq-	-std=c++14
nu:e14:s56:prof		nu:e14:prof	-               -nq-	-std=c++14
e14:s54:debug		e14:debug	-               -nq-	-std=c++14
e14:s54:prof		e14:prof	-               -nq-	-std=c++14
nu:e14:s54:debug	nu:e14:debug	-               -nq-	-std=c++14
nu:e14:s54:prof		nu:e14:prof	-               -nq-	-std=c++14
e14:s53:debug		e14:debug	-               -nq-	-std=c++14
e14:s53:prof		e14:prof	-               -nq-	-std=c++14
nu:e14:s53:debug	nu:e14:debug	-               -nq-	-std=c++14
nu:e14:s53:prof		nu:e14:prof	-               -nq-	-std=c++14
e14:s50:debug		e14:debug	-               -nq-	-std=c++14
e14:s50:prof		e14:prof	-               -nq-	-std=c++14
nu:e14:s50:debug	nu:e14:debug	-               -nq-	-std=c++14
nu:e14:s50:prof		nu:e14:prof	-               -nq-	-std=c++14
e14:s49:debug		e14:debug	-               -nq-	-std=c++14
e14:s49:prof		e14:prof	-               -nq-	-std=c++14
nu:e14:s49:debug	nu:e14:debug	-               -nq-	-std=c++14
nu:e14:s49:prof		nu:e14:prof	-               -nq-	-std=c++14
e14:s48:debug		e14:debug	-               -nq-	-std=c++14
e14:s48:prof		e14:prof	-               -nq-	-std=c++14
nu:e14:s48:debug	nu:e14:debug	-               -nq-	-std=c++14
nu:e14:s48:prof		nu:e14:prof	-               -nq-	-std=c++14
e10:s48:debug		e10:debug	-               -nq-	-std=c++14
e10:s48:prof		e10:prof	-               -nq-	-std=c++14
nu:e10:s48:debug	nu:e10:debug	-               -nq-	-std=c++14
nu:e10:s48:prof		nu:e10:prof	-               -nq-	-std=c++14
e14:s47:debug		e14:debug	-               -nq-	-std=c++14
e14:s47:prof		e14:prof	-               -nq-	-std=c++14
nu:e14:s47:debug	nu:e14:debug	-               -nq-	-std=c++14
nu:e14:s47:prof		nu:e14:prof	-               -nq-	-std=c++14
e10:s47:debug		e10:debug	-               -nq-	-std=c++14
e10:s47:prof		e10:prof	-               -nq-	-std=c++14
nu:e10:s47:debug	nu:e10:debug	-               -nq-	-std=c++14
nu:e10:s47:prof		nu:e10:prof	-               -nq-	-std=c++14
e14:s46:debug		e14:debug	-               -nq-	-std=c++14
e14:s46:prof		e14:prof	-               -nq-	-std=c++14
nu:e14:s46:debug	nu:e14:debug	-               -nq-	-std=c++14
nu:e14:s46:prof		nu:e14:prof	-               -nq-	-std=c++14
e10:s46:debug		e10:debug	-               -nq-	-std=c++14
e10:s46:prof		e10:prof	-               -nq-	-std=c++14
nu:e10:s46:debug	nu:e10:debug	-               -nq-	-std=c++14
nu:e10:s46:prof		nu:e10:prof	-               -nq-	-std=c++14
end_qualifier_list


table_fragment_begin
# this is temporary until art and boost define ROOT_INCLUDE_PATH
pathPrepend(ROOT_INCLUDE_PATH, ${ART_INC}:${FHICLCPP_INC}:${CETLIB_INC}:${BOOST_INC}:${ARTDAQ_CORE_INC})
table_fragment_end
#

# Preserve tabs and formatting in emacs and vi / vim:

### Local Variables:
### tab-width: 8
### End:

# vi:set ts=8 noexpandtab:
