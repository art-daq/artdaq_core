# The parent line must be the first non-comment line in the file
# This line defines the product name and version
parent artdaq_core  v1_04_30
defaultqual	e9:s21

# These optional lines define the installed directories where
# headers, libraries, and executables will be found
# Use them only if your product does not conform to the defaults
# Format: directory_type directory_path directory_name
# The only recognized values of the first field are incdir, libdir, and bindir
# The only recognized values of the second field are product_dir and fq_dir
# The third field is not constrained
# The examples here reflect the defaults
incdir      product_dir include
libdir      fq_dir      lib
bindir      fq_dir      bin
fcldir      -
perllib  product_dir

#
product		version		optional
art		v1_18_05	s31
art		v1_17_07	s30
art		v1_17_06	s28
art		v1_17_05	s26
art		v1_17_04	s24
art		v1_17_03	s21
art		v1_17_02	s20
art		v1_16_02	s18
art		v1_16_00	s16
art		v1_15_02	s15
art		v1_14_02	s11
cetbuildtools	v5_01_03	-	only_for_build
end_product_list

# e6  - with gcc 4.9.1 and -std=c++1y
# e7  - with gcc 4.9.2 and -std=c++1y
# e9  - with gcc 4.9.3 and -std=c++14
# -nq- means there is no qualifier
# a "-" means the dependent product is not required by the parent and will not be setup
qualifier		art		notes
e9:s31:debug             e9:debug        -std=c++14
e9:s31:prof              e9:prof         -std=c++14
nu:e9:s31:debug          nu:e9:debug     -std=c++14
nu:e9:s31:prof           nu:e9:prof      -std=c++14
e7:s31:debug             e7:debug        -std=c++14
e7:s31:prof              e7:prof         -std=c++14
nu:e7:s31:debug          nu:e7:debug     -std=c++14
nu:e7:s31:prof           nu:e7:prof      -std=c++14
e9:s30:debug             e9:debug        -std=c++14
e9:s30:prof              e9:prof         -std=c++14
nu:e9:s30:debug          nu:e9:debug     -std=c++14
nu:e9:s30:prof           nu:e9:prof      -std=c++14
e7:s30:debug             e7:debug        -std=c++14
e7:s30:prof              e7:prof         -std=c++14
nu:e7:s30:debug          nu:e7:debug     -std=c++14
nu:e7:s30:prof           nu:e7:prof      -std=c++14
e9:s28:debug             e9:debug        -std=c++14
e9:s28:prof              e9:prof         -std=c++14
nu:e9:s28:debug          nu:e9:debug     -std=c++14
nu:e9:s28:prof           nu:e9:prof      -std=c++14
e7:s28:debug             e7:debug        -std=c++14
e7:s28:prof              e7:prof         -std=c++14
nu:e7:s28:debug          nu:e7:debug     -std=c++14
nu:e7:s28:prof           nu:e7:prof      -std=c++14
e9:s26:debug             e9:debug        -std=c++14
e9:s26:prof              e9:prof         -std=c++14
nu:e9:s26:debug          nu:e9:debug     -std=c++14
nu:e9:s26:prof           nu:e9:prof      -std=c++14
e7:s26:debug             e7:debug        -std=c++14
e7:s26:prof              e7:prof         -std=c++14
nu:e7:s26:debug          nu:e7:debug     -std=c++14
nu:e7:s26:prof           nu:e7:prof      -std=c++14
e9:s24:debug             e9:debug        -std=c++14
e9:s24:prof              e9:prof         -std=c++14
nu:e9:s24:debug          nu:e9:debug     -std=c++14
nu:e9:s24:prof           nu:e9:prof      -std=c++14
e7:s24:debug             e7:debug        -std=c++14
e7:s24:prof              e7:prof         -std=c++14
nu:e7:s24:debug          nu:e7:debug     -std=c++14
nu:e7:s24:prof           nu:e7:prof      -std=c++14
e9:s21:debug             e9:debug        -std=c++14
e9:s21:prof              e9:prof         -std=c++14
nu:e9:s21:debug          nu:e9:debug     -std=c++14
nu:e9:s21:prof           nu:e9:prof      -std=c++14
e7:s21:debug             e7:debug        -std=c++14
e7:s21:prof              e7:prof         -std=c++14
nu:e7:s21:debug          nu:e7:debug     -std=c++14
nu:e7:s21:prof           nu:e7:prof      -std=c++14
e9:s20:debug             e9:debug        -std=c++14
e9:s20:prof              e9:prof         -std=c++14
nu:e9:s20:debug          nu:e9:debug     -std=c++14
nu:e9:s20:prof           nu:e9:prof      -std=c++14
e7:s20:debug             e7:debug        -std=c++14
e7:s20:prof              e7:prof         -std=c++14
nu:e7:s20:debug          nu:e7:debug     -std=c++14
nu:e7:s20:prof           nu:e7:prof      -std=c++14
e9:s18:debug             e9:debug        -std=c++14
e9:s18:prof              e9:prof         -std=c++14
nu:e9:s18:debug          nu:e9:debug     -std=c++14
nu:e9:s18:prof           nu:e9:prof      -std=c++14
e7:s18:debug             e7:debug        -std=c++14
e7:s18:prof              e7:prof         -std=c++14
nu:e7:s18:debug          nu:e7:debug     -std=c++14
nu:e7:s18:prof           nu:e7:prof      -std=c++14
e7:s16:debug             e7:debug        -std=c++14
e7:s16:prof              e7:prof         -std=c++14
nu:e7:s16:debug          nu:e7:debug     -std=c++14
nu:e7:s16:prof           nu:e7:prof      -std=c++14
e7:s15:debug             e7:debug        -std=c++14
e7:s15:prof              e7:prof         -std=c++14
nu:e7:s15:debug          nu:e7:debug     -std=c++14
nu:e7:s15:prof           nu:e7:prof      -std=c++14
e6:s15:debug             e6:debug        -std=c++1y
e6:s15:prof              e6:prof         -std=c++1y
nu:e6:s15:debug          nu:e6:debug     -std=c++1y
nu:e6:s15:prof           nu:e6:prof      -std=c++1y
e7:s11:debug             e7:debug        -std=c++14
e7:s11:prof              e7:prof         -std=c++14
nu:e7:s11:debug          nu:e7:debug     -std=c++14
nu:e7:s11:prof           nu:e7:prof      -std=c++14
e6:s11:debug             e6:debug        -std=c++1y
e6:s11:prof              e6:prof         -std=c++1y
nu:e6:s11:debug          nu:e6:debug     -std=c++1y
nu:e6:s11:prof           nu:e6:prof      -std=c++1y
end_qualifier_list



table_fragment_begin
# this is temporary until art and boost define ROOT_INCLUDE_PATH
pathPrepend(ROOT_INCLUDE_PATH, ${ART_INC}:${FHICLCPP_INC}:${CETLIB_INC}:${BOOST_INC}:${ARTDAQ_CORE_INC})
table_fragment_end
#

# Preserve tabs and formatting in emacs and vi / vim:

### Local Variables:
### tab-width: 8
### End:

# vi:set ts=8 noexpandtab:
